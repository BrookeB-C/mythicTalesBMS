# Mythic Tales BMS â€” Genies Configuration
#
# Purpose: Central place to define runtime profiles and scopes for the two agent instances
# ("genies"). This file is declarative. If your agent harness supports reading external
# config, point it to this file (e.g., env var GENIE_CONFIG=config.toml). Otherwise, treat
# this as documentation to consistently set environment variables and scopes for each run.

version = "1.0"

[global]
# GitHub repository identifier (used by badges, CI references, etc.)
repo = "BrookeB-C/mythicTalesBMS"
# Default environment for local development
default_env = { SPRING_PROFILES_ACTIVE = "dev" }

# =====================
# Genie Profiles
# =====================

[genies.api]
role = "genie-api"                      # Matches AGENT_ROLE expected by AGENTS.md
guide = "docs/agents/genie-api.md"      # Primary operating guide for this genie
tasks_file = "docs/techtasks/100-genie-api-tasks.md"
enabled = true

# Environment variables to export when running this genie
env = {
  AGENT_ROLE = "genie-api",
  SPRING_PROFILES_ACTIVE = "dev"
}

# Scope controls: where this genie is allowed to work primarily
paths_include = [
  "src/main/java/com/mythictales/bms/taplist/api/**",
  "src/main/java/com/mythictales/bms/taplist/security/**",
  "src/main/java/com/mythictales/bms/taplist/service/**",
  "src/main/java/com/mythictales/bms/taplist/config/**",
  "docs/**"
]
paths_exclude = [
  "src/main/resources/templates/**"
]

# Quality gates the genie should satisfy before handoff
checks = { run_tests = true, spotbugs_strict = true, codeql = true, formatter_check = true }


[genies.platform]
role = "genie-platform-data"
guide = "docs/agents/genie-platform-data.md"
tasks_file = "docs/techtasks/101-genie-platform-data-tasks.md"
enabled = true

env = {
  AGENT_ROLE = "genie-platform-data",
  SPRING_PROFILES_ACTIVE = "dev"
}

paths_include = [
  "src/main/resources/**",
  "src/main/java/com/mythictales/bms/taplist/config/**",
  "db/migration/**",
  ".github/**",
  "Dockerfile",
  "compose.yaml",
  "docs/**"
]
paths_exclude = []

checks = { run_tests = true, spotbugs_strict = true, codeql = true, formatter_check = true }


# =====================
# Runtime Profiles
# =====================

[profiles.dev]
description = "Local development: H2, Swagger UI on, demo seed enabled"
swagger = true
h2_console = true
seed_demo = true
csrf_loosened = true
cors = { allow_any_origin = true }

[profiles.prod]
description = "Production: Postgres, Swagger UI off by default, strict CORS"
swagger = false
h2_console = false
seed_demo = false
csrf_loosened = false
cors = { allow_any_origin = false, allowed_origins = [] }


# =====================
# Helper Commands (informational)
# =====================

[commands]
run = "mvn spring-boot:run"
test = "mvn test"
verify = "mvn -B -ntp verify"
spotbugs = "make spotbugs-strict"
format = "make format && make check-format"
swagger = "open http://localhost:8080/swagger-ui.html"

# =====================
# Additional Genie Profiles (Coordination + Product)
# =====================

[genies.techlead]
role = "techlead"
guide = "docs/agents/genie-techlead.md"
tasks_file = "docs/techtasks/000-technical-backlog.md"
enabled = true
env = { AGENT_ROLE = "techlead", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**", "bin/**", "AGENTS.md", "config.toml", ".github/**"]
checks = { run_tests = false, formatter_check = true }

[genies.product]
role = "product-manager"
guide = "docs/agents/genie-product-manager.md"
tasks_file = "docs/techtasks/102-genie-product-manager-tasks.md"
enabled = true
env = { AGENT_ROLE = "product-manager", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**", "src/main/resources/**"]
checks = { run_tests = false, formatter_check = true }

# =====================
# Domain Genies
# =====================

[genies.production]
role = "genie-production"
guide = "docs/agents/genie-production.md"
tasks_file = "docs/techtasks/110-genie-production-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-production", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**", "src/main/java/com/mythictales/bms/taplist/production/**"]
checks = { run_tests = true, formatter_check = true }

[genies.keginventory]
role = "genie-keginventory"
guide = "docs/agents/genie-keginventory.md"
tasks_file = "docs/techtasks/111-genie-keginventory-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-keginventory", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**", "src/main/java/com/mythictales/bms/taplist/keginventory/**"]
checks = { run_tests = true, formatter_check = true }

[genies.catalog]
role = "genie-catalog"
guide = "docs/agents/genie-catalog.md"
tasks_file = "docs/techtasks/112-genie-catalog-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-catalog", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**", "src/main/java/com/mythictales/bms/taplist/catalog/**"]
checks = { run_tests = true, formatter_check = true }

[genies.taproom]
role = "genie-taproom"
guide = "docs/agents/genie-taproom.md"
tasks_file = "docs/techtasks/113-genie-taproom-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-taproom", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**", "src/main/java/com/mythictales/bms/taplist/**"]
checks = { run_tests = true, formatter_check = true }

[genies.sales]
role = "genie-sales"
guide = "docs/agents/genie-sales.md"
tasks_file = "docs/techtasks/114-genie-sales-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-sales", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.distribution]
role = "genie-distribution"
guide = "docs/agents/genie-distribution.md"
tasks_file = "docs/techtasks/115-genie-distribution-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-distribution", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.prodinventory]
role = "genie-prodinventory"
guide = "docs/agents/genie-prodinventory.md"
tasks_file = "docs/techtasks/116-genie-prodinventory-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-prodinventory", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.procurement]
role = "genie-procurement"
guide = "docs/agents/genie-procurement.md"
tasks_file = "docs/techtasks/117-genie-procurement-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-procurement", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.maintenance]
role = "genie-maintenance"
guide = "docs/agents/genie-maintenance.md"
tasks_file = "docs/techtasks/118-genie-maintenance-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-maintenance", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.analytics]
role = "genie-analytics"
guide = "docs/agents/genie-analytics.md"
tasks_file = "docs/techtasks/119-genie-analytics-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-analytics", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.billing]
role = "genie-billing"
guide = "docs/agents/genie-billing.md"
tasks_file = "docs/techtasks/120-genie-billing-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-billing", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.compliance]
role = "genie-compliance"
guide = "docs/agents/genie-compliance.md"
tasks_file = "docs/techtasks/121-genie-compliance-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-compliance", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**"]
checks = { run_tests = false, formatter_check = true }

[genies.iam]
role = "genie-iam"
guide = "docs/agents/genie-iam.md"
tasks_file = "docs/techtasks/122-genie-iam-tasks.md"
enabled = true
env = { AGENT_ROLE = "genie-iam", SPRING_PROFILES_ACTIVE = "dev" }
paths_include = ["docs/**", "src/main/java/com/mythictales/bms/taplist/security/**"]
checks = { run_tests = true, formatter_check = true }
