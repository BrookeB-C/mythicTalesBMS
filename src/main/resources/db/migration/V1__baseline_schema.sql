-- Flyway baseline schema for Taproom Ops and related core entities

-- Breweries
create table if not exists brewery (
  id bigint generated by default as identity primary key,
  name varchar(255) not null
);

-- Taprooms
create table if not exists taproom (
  id bigint generated by default as identity primary key,
  name varchar(255) not null,
  brewery_id bigint not null,
  constraint fk_taproom_brewery foreign key (brewery_id) references brewery(id)
);

-- Bars
create table if not exists bar (
  id bigint generated by default as identity primary key,
  name varchar(255) not null,
  brewery_id bigint not null,
  constraint fk_bar_brewery foreign key (brewery_id) references brewery(id)
);

-- Venues
create table if not exists venue (
  id bigint generated by default as identity primary key,
  name varchar(255) not null,
  type varchar(32) not null,
  brewery_id bigint,
  constraint uq_venue_name unique (name),
  constraint fk_venue_brewery foreign key (brewery_id) references brewery(id)
);

-- Beers
create table if not exists beer (
  id bigint generated by default as identity primary key,
  name varchar(255) not null,
  style varchar(255) not null,
  abv double precision not null
);

-- Keg size specifications
create table if not exists keg_size_spec (
  id bigint generated by default as identity primary key,
  code varchar(64) not null,
  gallons double precision not null,
  ounces double precision not null,
  liters double precision not null,
  constraint uq_keg_size_spec_code unique (code)
);

-- Kegs
create table if not exists keg (
  id bigint generated by default as identity primary key,
  beer_id bigint not null,
  brewery_id bigint not null,
  size_id bigint not null,
  total_ounces double precision not null,
  remaining_ounces double precision not null,
  status varchar(32),
  assigned_venue_id bigint,
  serial_number varchar(255) not null,
  version bigint not null,
  constraint fk_keg_beer foreign key (beer_id) references beer(id),
  constraint fk_keg_brewery foreign key (brewery_id) references brewery(id),
  constraint fk_keg_size foreign key (size_id) references keg_size_spec(id),
  constraint fk_keg_assigned_venue foreign key (assigned_venue_id) references venue(id),
  constraint uq_keg_brewery_serial unique (brewery_id, serial_number)
);

-- Taps
create table if not exists tap (
  id bigint generated by default as identity primary key,
  number integer not null,
  keg_id bigint,
  venue_id bigint,
  version bigint not null,
  taproom_id bigint,
  bar_id bigint,
  constraint fk_tap_keg foreign key (keg_id) references keg(id),
  constraint fk_tap_venue foreign key (venue_id) references venue(id),
  constraint fk_tap_taproom foreign key (taproom_id) references taproom(id),
  constraint fk_tap_bar foreign key (bar_id) references bar(id),
  constraint uq_venue_number unique (venue_id, number)
);

-- Keg placements (tap assignments over time)
create table if not exists keg_placement (
  id bigint generated by default as identity primary key,
  tap_id bigint not null,
  keg_id bigint not null,
  started_at timestamp not null,
  ended_at timestamp,
  version bigint not null,
  constraint fk_kegplacement_tap foreign key (tap_id) references tap(id),
  constraint fk_kegplacement_keg foreign key (keg_id) references keg(id)
);
create index if not exists idx_kegplacement_active_tap on keg_placement (tap_id, ended_at);

-- Keg events (pour, tap, blow, untap)
create table if not exists users (
  id bigint generated by default as identity primary key,
  username varchar(255) not null,
  password varchar(255) not null,
  role varchar(64),
  brewery_id bigint,
  bar_id bigint,
  taproom_id bigint,
  constraint uq_users_username unique (username),
  constraint fk_users_brewery foreign key (brewery_id) references brewery(id),
  constraint fk_users_bar foreign key (bar_id) references bar(id),
  constraint fk_users_taproom foreign key (taproom_id) references taproom(id)
);

-- Keg events (pour, tap, blow, untap)
create table if not exists keg_event (
  id bigint generated by default as identity primary key,
  placement_id bigint not null,
  type varchar(32) not null,
  ounces double precision,
  actor_id bigint,
  at_time timestamp not null,
  constraint fk_kegevent_placement foreign key (placement_id) references keg_placement(id),
  constraint fk_kegevent_actor foreign key (actor_id) references users(id)
);
create index if not exists idx_kegevent_placement_time on keg_event (placement_id, at_time);
